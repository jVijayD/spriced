package com.sim.spriced.defnition.repo.impl;

import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.List;

import org.jooq.Condition;
import org.jooq.Field;
import org.jooq.Record;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Repository;

import com.sim.spriced.defnition.repo.IGroupRepo;
import com.sim.spriced.framework.constants.ModelConstants;
import com.sim.spriced.framework.context.ContextManager;
import com.sim.spriced.framework.models.Group;
import com.sim.spriced.framework.repo.BaseRepo;

@Repository
public class GroupRepo extends BaseRepo implements IGroupRepo {

	private static final String TABLE = "group";
	private static final String NAME = "name";
	
	@Autowired
	private ContextManager contextManager;
	

	@Override
	public Group create(Group group) {

//		List<Field<?>> fields =new ArrayList<>();
//		Field<String> name = column(NAME,String.class);
//		Field<Boolean> disabled = column(ModelConstants.IS_DISABLED,Boolean.class);
//		Field<String> updated_by = column(ModelConstants.UPDATED_BY,String.class);
//		Field<Timestamp> updated_date = column(ModelConstants.UPDATED_DATE,Timestamp.class);
//		
//		
//		fields.add(name);
//		fields.add(disabled);
//		fields.add(updated_by);
//		fields.add(updated_date);
//		
//		Record rec = this.context.insertInto(table(TABLE), fields).values(group.getName(),group.isDisabled(),contextManager.getRequestContext().getUser(),this.timeStamp).returningResult(fields).fetchOne();
//		group.setUpdatedBy(rec.get(updated_by));
//		group.setUpdatedDate(rec.get(updated_date));
//		return group;
		
		
		return this.insert(group);
	}

	@Override
	public List<Group> fetchAll(boolean loadDisabled) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Page<Group> fetchAll(boolean loadDisabled, Pageable pagable) {
		Condition condition = column(ModelConstants.IS_DISABLED).eq(loadDisabled);
		return this.fetchAll(TABLE, condition, Group.class, pagable);
	}

	@Override
	public Group fetchByName(String name) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Group fetchByEntityName(String entityName) {
		// TODO Auto-generated method stub
		return null;
	}

	@Override
	public Group updateByName(Group group) {
		// TODO Auto-generated method stub
		return null;
	}

}
